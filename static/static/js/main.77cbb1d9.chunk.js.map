{"version":3,"sources":["components/header.jsx","components/footer.jsx","layout/index.jsx","config/method.js","config/http.js","config/api.js","pages/login.jsx","pages/home.jsx","pages/register.jsx","router/index.jsx","serviceWorker.js","index.js"],"names":["Header","HeaderComponenet","react_default","a","createElement","className","React","Component","Footer","FooterComponenet","Content","history","createBrowserHistory","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isShow","layout","components_header","children","components_footer","location","pathname","setState","LayoutDom","method","name","reg","RegExp","r","window","search","substr","match","unescape","axios","defaults","baseURL","withCredentials","timeout","interceptors","request","use","config","headers","response","data","code","Error","msg","http","post","url","arguments","length","undefined","success","errcallback","then","result","console","log","catch","error","api","login","register","userinfo","keys","reduce","copy","concat","handleSubmit","e","preventDefault","form","validateFields","err","values","res","push","token","getFieldDecorator","row","col","span","offset","es_form","onSubmit","Item","rules","required","message","input","prefix","icon","type","style","color","placeholder","es_button","htmlType","LoginForm","create","Home","getData","formItemLayout","labelCol","xs","sm","wrapperCol","Register","assign","label","hasFeedback","RegisterForm","BasicRoute","react_router","layout_Login","exact","path","component","render","to","Boolean","hostname","ReactDOM","router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77cbb1d9.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout } from 'antd';\nimport '@/static/style/header.less'\nconst { Header } = Layout;\nclass HeaderComponenet extends React.Component {\n    render() {\n        return (\n            <Header className=\"ui-header\"> \n                header\n            </Header>\n        )\n    }\n}\nexport default HeaderComponenet;","import React from 'react';\nimport { Layout } from 'antd';\nimport '@/static/style/footer.less'\nconst { Footer } = Layout;\nclass FooterComponenet extends React.Component {\n    render() {\n        return (\n            <Footer className='ui-footer'>\n                Footer\n            </Footer>\n        )\n    }\n}\nexport default FooterComponenet;","import React from 'react';\nimport { Layout } from 'antd';\nimport { createBrowserHistory } from \"history\";\nimport HeaderComponenet from '@/components/header.jsx';\nimport FooterComponenet from '@/components/footer.jsx';\nimport \"@/static/style/public.less\"\nconst { Content } = Layout;\nconst history = createBrowserHistory();\nexport default class Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isShow:false,\n        }\n    }\n    LayoutDom(props) {\n        return (\n            <Layout>\n                <HeaderComponenet />\n                <Content>\n                    {this.props.children}\n                </Content>\n                <FooterComponenet />\n            </Layout>\n        )\n    }\n    Login(props) {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        )\n    }\n    componentWillMount(){\n        if (history.location.pathname === '/login' || history.location.pathname === '/register') {\n            this.setState({\n                isShow: true\n            })\n        }\n    }\n    componentDidMount(){\n        \n    }\n    render() {\n        return (\n            <div>\n                {this.state.isShow ? this.Login() : this.LayoutDom()} \n            </div>\n        )\n    }\n}\n\n \n","export default{\n    getQueryString(name) {\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n        var r = window.location.search.substr(1).match(reg);\n        if (r != null) return unescape(r[2]);\n        return null;\n    }\n}","import axios from 'axios'\nimport method from \"./method\"\naxios.defaults.baseURL = 'api'\naxios.defaults.withCredentials = true\naxios.defaults.timeout = 100000\n// console.log(method.getQueryString('token').length);\n\n//  axios拦截器\n axios.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=UTF-8';\n    if (method.getQueryString('token')) {\n        config.headers['Authorization'] = 'Bearer ' + method.getQueryString('token');\n    }\n    \n    return config\n });\n  \n axios.interceptors.response.use(response => {\n     // 在这里你可以判断后台返回数据携带的请求码\n    if (response.data.code == 1) {\n      return  response.data\n    }else {\n      // 非200请求抱错\n      throw Error(response.data.msg || '服务异常')\n    }\n});\n\n\nconst http = {\n    post(url, data = {}, success, errcallback) {\n        return axios({\n            method: \"post\", // 请求协议\n            url, // 请求的地址\n            data,\n        }).then((result) => {\n             console.log('ajax数据',result);\n            if (result.code == \"1\") {\n                success(result.data);\n            } else if (result.code == \"0\" || result.code >= 500) {\n                errcallback(result)\n            } \n        }).catch((error) => {\n            errcallback(error)\n        });\n    }\n}\nexport default http;\n\n\n","\n// const prefix = '/api' // api地址前缀\nexport default (config => {\n    return Object.keys(config).reduce((copy, name) => {\n        copy[name] = `${config[name]}`\n        return copy\n    }, {})\n})({\n    \"login\": \"/login\",\n    \"register\": \"/register\",\n    \"userinfo\": \"/userinfo\"\n})\n","import React from 'react';\nimport { Row, Col, Form, Icon, Input, Button, Checkbox } from 'antd';\nimport \"@/static/style/login.less\"\nimport http from '@/config/http';\nimport api from '@/config/api';\nclass Login extends React.Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                http.post(api.login,values,res=>{\n                    console.log(res);\n                    this.props.history.push('/?token=' + res.token);\n                },err=>{\n                    console.log(err);\n                })\n            }\n        });\n    };\n    \n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div className=\"mt10\">\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                            <Form.Item>\n                                {getFieldDecorator('username', {\n                                    rules: [{ required: true, message: 'Please input your username!' }],\n                                })(\n                                    <Input\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                        placeholder=\"Username\"\n                                    />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('password', {\n                                    rules: [{ required: true, message: 'Please input your Password!' }],\n                                })(\n                                    <Input\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                    />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {/* {getFieldDecorator('remember', {\n                                    valuePropName: 'checked',\n                                    initialValue: true,\n                                })(<Checkbox>Remember me</Checkbox>)}\n\n                                <a className=\"login-form-forgot\" href=\"\">\n                                    Forgot password\n                                </a> */}\n                                \n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                    Log in\n                                </Button>\n                                   \n                                {/* <a href=\"\">register now!</a> */}\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n            \n        )\n    }\n}\n\nconst LoginForm = Form.create({ name: 'normal_login' })(Login);\n\nexport default LoginForm;","import React from 'react';\nimport http from '@/config/http';\nimport api from '@/config/api';\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <div>\n                home页面\n            </div>\n        )\n    }\n    getData(){\n        \n        http.post(api.userinfo,{},res=>{\n            console.log(res);\n        },err=>{\n            console.log(err);\n        })\n    }\n    componentDidMount(){\n        this.getData();\n    }\n}\n","import React from 'react';\nimport { Form, Icon, Input, Button, Checkbox, Row, Col} from 'antd';\nimport \"@/static/style/register.less\"\nimport api from '@/config/api';\nimport http from '@/config/http';\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 12 },\n    },\n};\nclass Register extends React.Component{\n    constructor(){\n        super();\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                // console.log('Received values of form: ', values);\n                http.post(api.register, values, res => {\n                    if(res='success'){\n                        this.props.history.push('/login');\n                    }\n                }, err => {\n                    console.log(err);\n                })\n            }\n        });\n    };\n    \n    render(){\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div className=\"mt10\">\n                <Row>\n                    <Col span={8} offset={8}>\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"login-form\">\n                            <Form.Item label=\"手机号\" hasFeedback>\n                                {getFieldDecorator('phone', {\n                                    rules: [{ required: true, message: '请输入手机号!' }],\n                                })(\n                                    <Input prefix={<Icon type=\"phone\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"手机号\"/>,\n                                )}\n                            </Form.Item>\n                            <Form.Item label=\"用户名\" hasFeedback>\n                                {getFieldDecorator('username', {\n                                    rules: [{ required: true, message: '请输入用户名!' }],\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\"/>,\n                                )}\n                            </Form.Item>\n                            <Form.Item label=\"密码\" hasFeedback>\n                                {getFieldDecorator('password', {\n                                    rules: [{ required: true, message: '请输入密码!' }],\n                                })(\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\"/>,\n                                )}\n                            </Form.Item>\n                            <Form.Item label=\"确认密码\" hasFeedback>\n                                {getFieldDecorator('confirmPwd', {\n                                    rules: [{ required: true, message: '请再次确认密码!' }],\n                                })(\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />,\n                                )}\n                            </Form.Item>\n                            {/* <Form.Item label=\"上传图片\" hasFeedback>\n                                {getFieldDecorator('uploadImg', {\n                                    rules: [{ required: true, message: '请上传图片!' }],\n                                })(\n                                    <Input  type=\"file\"  />,\n                                )}\n                            </Form.Item> */}\n                            <Form.Item>\n                                \n                                <Button type=\"primary\" htmlType=\"submit\" className=\"register-form-button\"> 注册 </Button>\n                            </Form.Item>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n            \n        );\n    }\n}\n\nconst RegisterForm = Form.create({ name: 'register' })(Register);\n\nexport default RegisterForm;","import React from 'react';\n// import { Switch, Route, Router } from 'react-router';\nimport { Router, Link, Switch, Route, Redirect } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport LayoutIndex from '@/layout/index.jsx';\nimport Login from '@/pages/login.jsx';\nimport Home from '@/pages/home.jsx';\nimport Register from '@/pages/register.jsx';\nconst history = createBrowserHistory();\n\nconst BasicRoute = () => (\n    <Router history={history}>\n        <LayoutIndex>\n            <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route render={() => <Redirect to=\"/\" />} />\n            </Switch>\n        </LayoutIndex>\n    </Router>\n);\n\nexport default BasicRoute;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from '@/router/index.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}