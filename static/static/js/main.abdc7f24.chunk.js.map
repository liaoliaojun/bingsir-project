{"version":3,"sources":["components/header.jsx","components/footer.jsx","layout/index.jsx","config/method.js","config/http.js","config/api.js","pages/login.jsx","pages/home.jsx","pages/register.jsx","router/index.jsx","serviceWorker.js","index.js"],"names":["Header","HeaderComponenet","react_default","a","createElement","className","React","Component","Footer","FooterComponenet","Content","history","createBrowserHistory","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isShow","layout","components_header","children","components_footer","location","pathname","setState","LayoutDom","method","name","reg","RegExp","r","window","search","substr","match","unescape","axios","defaults","baseURL","withCredentials","timeout","interceptors","request","use","config","headers","response","data","code","console","log","Error","msg","http","post","url","arguments","length","undefined","success","errcallback","then","result","catch","error","api","login","register","userinfo","keys","reduce","copy","concat","handleSubmit","e","preventDefault","form","validateFields","err","values","res","push","token","getFieldDecorator","row","col","span","offset","es_form","onSubmit","Item","rules","required","message","input","prefix","icon","type","style","color","placeholder","es_button","htmlType","LoginForm","create","Home","getData","formItemLayout","labelCol","xs","sm","wrapperCol","Register","assign","label","hasFeedback","RegisterForm","BasicRoute","react_router","layout_Login","exact","path","component","render","to","Boolean","hostname","ReactDOM","router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abdc7f24.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport '@/static/style/header.less'\r\nconst { Header } = Layout;\r\nclass HeaderComponenet extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header className=\"ui-header\"> \r\n                header\r\n            </Header>\r\n        )\r\n    }\r\n}\r\nexport default HeaderComponenet;","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport '@/static/style/footer.less'\r\nconst { Footer } = Layout;\r\nclass FooterComponenet extends React.Component {\r\n    render() {\r\n        return (\r\n            <Footer className='ui-footer'>\r\n                Footer\r\n            </Footer>\r\n        )\r\n    }\r\n}\r\nexport default FooterComponenet;","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport { createBrowserHistory } from \"history\";\r\nimport HeaderComponenet from '@/components/header.jsx';\r\nimport FooterComponenet from '@/components/footer.jsx';\r\nimport \"@/static/style/public.less\"\r\nconst { Content } = Layout;\r\nconst history = createBrowserHistory();\r\nexport default class Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isShow:false,\r\n        }\r\n    }\r\n    LayoutDom(props) {\r\n        return (\r\n            <Layout>\r\n                <HeaderComponenet />\r\n                <Content>\r\n                    {this.props.children}\r\n                </Content>\r\n                <FooterComponenet />\r\n            </Layout>\r\n        )\r\n    }\r\n    Login(props) {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n    componentWillMount(){\r\n        if (history.location.pathname === '/login' || history.location.pathname === '/register') {\r\n            this.setState({\r\n                isShow: true\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isShow ? this.Login() : this.LayoutDom()} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\n","export default{\r\n    getQueryString(name) {\r\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n        var r = window.location.search.substr(1).match(reg);\r\n        if (r != null) return unescape(r[2]);\r\n        return null;\r\n    }\r\n}","import axios from 'axios'\r\nimport method from \"./method\"\r\nif (process.env.NODE_ENV == 'development') {\r\n    axios.defaults.baseURL = 'api'\r\n}else{\r\n    axios.defaults.baseURL = ''\r\n}\r\naxios.defaults.withCredentials = true\r\naxios.defaults.timeout = 100000\r\n// console.log(method.getQueryString('token').length);\r\n\r\n//  axios拦截器\r\n axios.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=UTF-8';\r\n    if (method.getQueryString('token')) {\r\n        config.headers['Authorization'] = 'Bearer ' + method.getQueryString('token');\r\n    }\r\n    return config\r\n });\r\n  \r\n axios.interceptors.response.use(response => {\r\n     // 在这里你可以判断后台返回数据携带的请求码\r\n    if (response.data.code == 1) {\r\n      return  response.data\r\n    }else {\r\n      // 非200请求抱错\r\n      console.log(response.data);\r\n      throw Error(response.data.msg || '服务异常')\r\n    }\r\n});\r\n\r\n\r\nconst http = {\r\n    post(url, data = {}, success, errcallback) {\r\n        return axios({\r\n            method: \"post\", // 请求协议\r\n            url, // 请求的地址\r\n            data,\r\n        }).then((result) => {\r\n             console.log('ajax数据',result);\r\n            if (result.code == \"1\") {\r\n                success(result.data);\r\n            } else if (result.code == \"0\" || result.code >= 500) {\r\n                errcallback(result)\r\n            } \r\n        }).catch((error) => {\r\n            errcallback(error)\r\n        });\r\n    }\r\n}\r\nexport default http;\r\n\r\n\r\n","\r\n// const prefix = '/api' // api地址前缀\r\nexport default (config => {\r\n    return Object.keys(config).reduce((copy, name) => {\r\n        copy[name] = `${config[name]}`\r\n        return copy\r\n    }, {})\r\n})({\r\n    \"login\": \"/login\",\r\n    \"register\": \"/register\",\r\n    \"userinfo\": \"/userinfo\"\r\n})\r\n","import React from 'react';\r\nimport { Row, Col, Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport \"@/static/style/login.less\"\r\nimport http from '@/config/http';\r\nimport api from '@/config/api';\r\nclass Login extends React.Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                http.post(api.login,values,res=>{\r\n                    console.log(res);\r\n                    this.props.history.push('/?token=' + res.token);\r\n                },err=>{\r\n                    console.log(err);\r\n                })\r\n            }\r\n        });\r\n    };\r\n    \r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"mt10\">\r\n                <Row>\r\n                    <Col span={8} offset={8}>\r\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Form.Item>\r\n                                {getFieldDecorator('username', {\r\n                                    rules: [{ required: true, message: 'Please input your username!' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Username\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [{ required: true, message: 'Please input your Password!' }],\r\n                                })(\r\n                                    <Input\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                {/* {getFieldDecorator('remember', {\r\n                                    valuePropName: 'checked',\r\n                                    initialValue: true,\r\n                                })(<Checkbox>Remember me</Checkbox>)}\r\n\r\n                                <a className=\"login-form-forgot\" href=\"\">\r\n                                    Forgot password\r\n                                </a> */}\r\n                                \r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                    Log in\r\n                                </Button>\r\n                                   \r\n                                {/* <a href=\"\">register now!</a> */}\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst LoginForm = Form.create({ name: 'normal_login' })(Login);\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport http from '@/config/http';\r\nimport api from '@/config/api';\r\n\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                home页面\r\n            </div>\r\n        )\r\n    }\r\n    getData(){\r\n        \r\n        http.post(api.userinfo,{},res=>{\r\n            console.log(res);\r\n        },err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox, Row, Col} from 'antd';\r\nimport \"@/static/style/register.less\"\r\nimport api from '@/config/api';\r\nimport http from '@/config/http';\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 5 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n    },\r\n};\r\nclass Register extends React.Component{\r\n    constructor(){\r\n        super();\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                http.post(api.register, values, res => {\r\n                    if(res='success'){\r\n                        this.props.history.push('/login');\r\n                    }\r\n                }, err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        });\r\n    };\r\n    \r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"mt10\">\r\n                <Row>\r\n                    <Col span={8} offset={8}>\r\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Form.Item label=\"手机号\" hasFeedback>\r\n                                {getFieldDecorator('phone', {\r\n                                    rules: [{ required: true, message: '请输入手机号!' }],\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"phone\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"手机号\"/>,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"用户名\" hasFeedback>\r\n                                {getFieldDecorator('username', {\r\n                                    rules: [{ required: true, message: '请输入用户名!' }],\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\"/>,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"密码\" hasFeedback>\r\n                                {getFieldDecorator('password', {\r\n                                    rules: [{ required: true, message: '请输入密码!' }],\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\"/>,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"确认密码\" hasFeedback>\r\n                                {getFieldDecorator('confirmPwd', {\r\n                                    rules: [{ required: true, message: '请再次确认密码!' }],\r\n                                })(\r\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            {/* <Form.Item label=\"上传图片\" hasFeedback>\r\n                                {getFieldDecorator('uploadImg', {\r\n                                    rules: [{ required: true, message: '请上传图片!' }],\r\n                                })(\r\n                                    <Input  type=\"file\"  />,\r\n                                )}\r\n                            </Form.Item> */}\r\n                            <Form.Item>\r\n                                \r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"register-form-button\"> 注册 </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst RegisterForm = Form.create({ name: 'register' })(Register);\r\n\r\nexport default RegisterForm;","import React from 'react';\r\n// import { Switch, Route, Router } from 'react-router';\r\nimport { Router, Link, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport LayoutIndex from '@/layout/index.jsx';\r\nimport Login from '@/pages/login.jsx';\r\nimport Home from '@/pages/home.jsx';\r\nimport Register from '@/pages/register.jsx';\r\nconst history = createBrowserHistory();\r\n\r\nconst BasicRoute = () => (\r\n    <Router history={history}>\r\n        <LayoutIndex>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home}/>\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route render={() => <Redirect to=\"/\" />} />\r\n            </Switch>\r\n        </LayoutIndex>\r\n    </Router>\r\n);\r\n\r\nexport default BasicRoute;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Router from '@/router/index.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Router/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}